<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[JackRo's Blog]]></title>
  <link href="https://jackro.cn/atom.xml" rel="self"/>
  <link href="https://jackro.cn/"/>
  <updated>2022-04-11T14:02:31+08:00</updated>
  <id>https://jackro.cn/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060120.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060120.html</id>
    <content type="html"><![CDATA[
<h2><a id="title%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%94%B6%E4%B8%8D%E5%88%B0-uilocalnotification%E6%9C%AC%E5%9C%B0%E9%80%9A%E7%9F%A5-date-2017-02-24" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: 模拟器收不到UILocalNotification本地通知<br />
date: 2017-02-24</h2>
<p>通知功能是iOS应用开发经常会碰到的需求，iOS应用的通知分为本地通知和远程通知（即消息推送），Apple develop官网的API Guides对通知的开发有详细的介绍。</p>
<p>今天我碰到的问题是模拟器收不到本地通知，按照惯例，先上本地通知的代码：</p>
<pre><code class="language-plain_text">    UILocalNotification *note = [[UILocalNotification alloc] init];
    note.alertBody = @&quot;Hypnotize&quot;;
    note.fireDate = date; //这里date 变量是一个NSDate对象，从页面上的UIDatePicker对象上获取的
    note.applicationIconBadgeNumber = 1;
    [[UIApplication sharedApplication] scheduleLocalNotification:note];
</code></pre>
<p>原本以为这样就可以接收到通知了，结果一运行，始终看不到通知，过了通知的设定时间好久了，也看不到通知。查阅了下通知的用法文档，才知道需要去申请发送通知的授权。修正后的代码如下所示：</p>
<pre><code class="language-plain_text">//判断是否已经授权用户发送通知
if ([[UIApplication sharedApplication] currentUserNotificationSettings].types != UIUserNotificationTypeNone) {
    UILocalNotification *note = [[UILocalNotification alloc] init];
    note.alertBody = @&quot;Hypnotize&quot;;
    note.fireDate = date;//这里date 变量是一个NSDate对象，从页面上的UIDatePicker对象上获取的
    note.applicationIconBadgeNumber = 1;
    [[UIApplication sharedApplication] scheduleLocalNotification:note];
} else{
    //用户注册通知，注册后才能收到通知，这会给用户一个弹框，提示用户选择是否允许发送通知
    [[UIApplication sharedApplication] registerUserNotificationSettings:[UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAlert|UIUserNotificationTypeBadge|UIUserNotificationTypeSound   categories:nil]];
}
</code></pre>
<p>用户注册通知后，会收到一个回调函数，一般如果未授权，创建通知就在这个回调函数里进行。</p>
<pre><code class="language-plain_text">//用户注册通知回调函数
- (void)application:(UIApplication *) application
    didRegisterUserNotificationSettings:(UIUserNotificationSettings   *)notificationSettings {
     if (notificationSettings.types != UIUserNotificationTypeNone) {
         NSLog(@&quot;haha&quot;);
        UILocalNotification *note = [[UILocalNotification alloc] init];
        note.alertBody = @&quot;Hypnotize&quot;;
        note.fireDate = rvc.selectDate;
        note.applicationIconBadgeNumber = 1;
        [[UIApplication sharedApplication] scheduleLocalNotification:note];
    }
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060211.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060211.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-java%E4%B8%AD%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B8%B2-date-2017-09-11" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Java中判断一个字符串数组是否包含相同字符串<br />
date: 2017-09-11</h2>
<p>如题。该问题很简单，使用一个嵌套循环即可解决，代码如下所示：</p>
<pre><code class="language-plain_text">/**
 * judge that a String Array whether or not contained equal String
 * 
 * @param strings
 *            a string Array
 * @return return true, contained; return false, not contained
 */
public static boolean judgeStrArrayContainsSameStr(String[] strings) {
	int len = strings.length;
	for (int i = 0; i &lt; len; i++) {
		String temp = strings[i];
		for (int j = i + 1; j &lt; len; j++) {
			String string = strings[j];
			if (string.equals(temp)) {
				return true;
			}
		}
	}
	return false;
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060303.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060303.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-linearlayout%E6%8C%89%E4%B8%8B%E6%88%96%E8%8E%B7%E5%8F%96%E7%84%A6%E7%82%B9%E6%97%B6%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E6%88%96%E5%9B%BE%E7%89%87-date-2015-06-29" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: LinearLayout按下或获取焦点时设置不同颜色或图片<br />
date: 2015-06-29</h2>
<p>在Android项目中有这样一个需求，画了几个LinearLayout布局做成ListView的样式，如下图所示：</p>
<p><img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2015062901.png" alt="jackro_blog2015062901" /></p>
<p>当点击每个LinearLayout项时想改变其背景颜色，准备了如下背景图片XML文件：</p>
<pre><code class="language-plain_text">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item android:drawable=&quot;@color/gray_background&quot; android:state_pressed=&quot;true&quot; /&gt;
    &lt;item android:drawable=&quot;@color/white_background&quot; /&gt;
&lt;/selector&gt;
</code></pre>
<p>但是当我每次运行点击每一项LinearLayout时，其背景颜色毫无变化。后来发现在每个LinearLayout项加入属性android:clickable=&quot;true&quot;点击LinearLayout才会出现背景颜色的变化。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060398.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060398.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-mac-android%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%A7%E8%A1%8C-gradlew-clean%E6%8F%90%E7%A4%BA-permission-denied-date-2017-04-10" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Mac Android项目目录下执行./gradlew clean 提示Permission denied<br />
date: 2017-04-10</h2>
<p>Mac环境下Android Studio创建的android项目，在项目目录下执行./gradlew clean，提示Permission denied，看到这个提示，自然想到的是sudo执行，然而sudo执行并不能解决问题，反而会提示command not found。万般无奈，只能百度，发现执行以下命令即可解决问题。</p>
<pre><code class="language-plain_text">//为gradlew文件添加可执行属性
chmod +x gradlew
</code></pre>
<p>chmod命令是修改文件访问权限的命令，文件访问权限包括只读、只写、可执行三种，其实最开始的提示Permission denied（权限拒绝）已经告诉了我们是android项目目录下可执行文件gradlew的访问权限的问题。因此需要为该文件添加可执行权限，所以执行以上命令即可解决该问题。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060491.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060491.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-mac-os%E4%B8%ADgit%E6%8F%90%E4%BA%A4%E6%93%8D%E4%BD%9C-ds-store%E6%96%87%E4%BB%B6%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-date-2017-09-22" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Mac os中git提交操作.DS_Store文件引发的问题解决<br />
date: 2017-09-22</h2>
<p>在Mac os中是存在.DS_Store文件的，在使用git对项目进行版本控制时，该文件如果不加入.gitignore中，每次修改文件提交时，该文件都会在提交列表中。明明没动它，每次修改却还是要提交它，这非常让人懊恼。</p>
<p>经过一番搜索，我找到了解决方法，我们可以先在.gitignore中加入该文件的忽略规则，如下所示：</p>
<pre><code class="language-plain_text">.DS_Store
</code></pre>
<p>然后删除项目中所有的.DS_Store，在项目目录下执行如下命令：</p>
<pre><code class="language-plain_text">find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch
</code></pre>
<p>然后提交项目即可。</p>
<p>但是，我发现我的项目是用webstorm打开的，项目目录下自动生成了.idea文件，每次提交.idea文件也会提交，加入忽略规则也不行，我想到了和上面类似的方法，删除.idea目录，然后再提交，即可解决。</p>
<p>参考链接：</p>
<p><a href="http://www.jianshu.com/p/fdaa8be7f6c3">如何删除GIT中的.DS_Store</a></p>
<p><a href="http://www.jianshu.com/p/8c0d262e49a6">Git中全局忽略.DS_Store文件</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060588.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060588.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-mysql%E8%87%AA%E5%AE%9A%E4%B9%89function%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-date-2018-04-03" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: mysql自定义function问题解决<br />
date: 2018-04-03</h2>
<p>最近公司生产环境的系统有个需求，需要往mysql数据库的一张表里批量添加数据，业务部门给的数据大致如下：</p>
<table>
<thead>
<tr>
<th>中心</th>
<th>3.5L箱子(条码)</th>
<th>8L箱子(条码)</th>
<th>15L箱子(条码)</th>
<th>20L箱子(条码)</th>
</tr>
</thead>
<tbody>
<tr>
<td>浙江物流一区</td>
<td>6个(X04571301-X04571306)</td>
<td>8个(X03571301-X03571308)</td>
<td>4个(X02571301-X02571304)</td>
<td>12个(X01571301-X01571312)</td>
</tr>
<tr>
<td>浙江物流二区</td>
<td>24个(X04571401-X04571424)</td>
<td>42个(X03571401-X03571442)</td>
<td>78个(X02571401-X02571478)</td>
<td>36个(X01571401-X01571436)</td>
</tr>
</tbody>
</table>
<p>这样的数据，首先想到的是在我的macOS上连上服务器数据库，然后把数据一条一条insert进去。但是我insert了几十条后，我发现业务部门给的数据累计有700多条。我当然不愿意就这样老老实实的一条一条insert了，因为实在是太耗费时间了。</p>
<p>根据以往的经验，最先想到的是，把表导入到navicat里，然后生成批量sql插入脚本，再传到服务器上去执行。但是，业务部门给的Excel并不是标准的一条一条的数据展示的，而是像上面那样给定箱子条码范围和数量。这样，我还得先给它生成一个标准的Excel，也比较麻烦。</p>
<p>然后我想到用写程序的方式，写循环，连接数据库插入数据。但是本地环境去连接生产环境的数据库是需要走流程申请权限的，可能流程要走个一两天，业务部门又急着要这个数据，这种方法又要摒弃掉了，只能使用下面一种方案了。</p>
<h2><a id="mysql%E8%87%AA%E5%AE%9A%E4%B9%89function%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>mysql自定义function实现批量添加数据</h2>
<h3><a id="mysql%E5%AE%9A%E4%B9%89function%E8%AF%AD%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>mysql定义function语法如下：</h3>
<pre><code class="language-plain_text">CREATE FUNCTION func_name ( [func_parameter] ) //括号是必须的，参数是可选的  
RETURNS type  
[ characteristic ...] routine_body 
</code></pre>
<ul>
<li>CREATE FUNCTION 用来创建函数的关键字</li>
<li>func_name 表示函数的名称</li>
<li>func_parameters为函数的参数列表，参数列表的形式为：[IN|OUT|INOUT] param_name type
<ol>
<li>IN：表示输入参数</li>
<li>OUT：表示输出参数</li>
<li>INOUT：表示既可以输入也可以输出</li>
<li>param_name：表示参数的名称</li>
<li>type：表示参数的类型，该类型可以是MySQL数据库中的任意类型</li>
</ol>
</li>
<li>RETURNS type：语句表示函数返回数据的类型</li>
<li>characteristic: 指定函数的特性，取值与存储过程的定义相同，可以有以下几种取值方式
<ol>
<li>LANGUAGE SQL: 说明routine_body部分由SQL语句组成，当前系统支持的语言为SQL, SQL是LANGUAGE特性的唯一值</li>
<li>[NOT] DETERMINISTIC: 指明存储过程执行的结果是否正确。DETERMINISTIC表示结果是确定的。每次执行存储过程时，相同的输入会得到相同的输出；<br />
而NOT DETERMINISTIC表示结果是不确定的，相同的输入可能得到不同的输出。如果没有指定任意一个值，默认为NOT DETERMINISTIC</li>
<li>{CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA}: 指明子程序使用SQL语句限制
<ol>
<li>CONTAINS SQL表明子程序包含SQL语句，但是不包含读写数据的语句</li>
<li>NO SQL表明子程序不包含SQL语句</li>
<li>READS SQL DATA说明子程序包含读写数据的语句</li>
<li>MODIFIES SQL DATA表明子程序包含写数据的语句</li>
<li>默认情况下，系统会指定为CONTAINS SQL</li>
</ol>
</li>
<li>SQL SECURITY { DEFINER|INVOKER}: 指明谁有权限来执行。DEFINER表示只有定义存储过程者才能执行；INVOKER表示拥有权限的调用者可以执行。<br />
默认情况下，系统指定为DEFINER</li>
<li>COMMENT 'string': 注释信息，可以用来描述存储过程或者函数</li>
</ol>
</li>
<li>routine_body是SQL代码内容，可以用BEGIN...END来表示SQL代码的开始与结束</li>
</ul>
<h3><a id="%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE%E7%9A%84function%E8%BF%87%E7%A8%8B%E5%A6%82%E4%B8%8B%EF%BC%9A" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>实现批量添加数据的function过程如下：</h3>
<p>首先，我把服务器数据库这张表的表结构拷到了本地，便于本地调试所写function是否正确。该表结构与所需要插入的数据相关的字段有三个:</p>
<pre><code class="language-plain_text">ybxtm, dept_id, box_size //ybxtm对应箱子条码, dept_id对应上面数据的中心, box_size对应箱子规格(3.5L, 8L, 15L, 20L)
</code></pre>
<p>然后，实现function实现及调用：</p>
<pre><code class="language-plain_text">DELIMITER 
</code></pre>
\[ /*定义分隔符，用于在Linux环境下防止function定义的内部分号造成的中途输出*/
    CREATE FUNCTION addData(deptId INT, boxSize DOUBLE, ybxtm VARCHAR(20), amount INT)
      RETURNS INT DETERMINISTIC /*该参数需要指定，不指定Linux环境下执行时会提示你需要指定function的characteristic*/
      BEGIN
        DECLARE i INT DEFAULT 1;
        DECLARE result INT DEFAULT 1;
        DECLARE sampleBoxNum VARCHAR(20) DEFAULT '';
        myloop: LOOP
          SET sampleBoxNum = ybxtm;
          IF i &gt; amount
          THEN LEAVE myloop;
          END IF;
          IF i &lt; 10
          THEN SET sampleBoxNum = concat(sampleBoxNum, concat('0', i));
          ELSE
            SET sampleBoxNum = concat(sampleBoxNum, i);
          END IF;
          INSERT INTO lx_ybx (ybxtm, dept_id, box_size) VALUES (sampleBoxNum, deptId, boxSize);
          SET result = result + 1;
          SET i = i + 1;
        END LOOP myloop;
        RETURN result - 1;
      END 
\]
<p>/<em>结束时需要挂上分隔符，告诉Linux终端，function定义结束</em>/</p>
<pre><code class="language-plain_text">/*调用function*/  
SELECT addData(29, 20, 'X025714', 78);
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060690.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060690.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-activity%E4%B8%AD%E5%BC%80%E5%90%AF%E8%BD%AE%E8%AF%A2%E6%9C%8D%E5%8A%A1%E5%BD%93activity%E5%BC%82%E5%B8%B8destroy%E6%97%B6-date-2016-05-30" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Activity中开启轮询服务当Activity异常destroy时<br />
date: 2016-05-30</h2>
<p>当你点击系统的back键，当前Activity开启的轮询服务刚好此时开启运行，即走onStartCommand，这里Activity用Intent传递给该服务的所有参数会为null。Activity此时已经异常destroy了，此时传递给Service的Intent的参数不会传递成功。所以这里如果你在Service的onStartCommand里用到了Intent传递过来的参数，则需要先判空，否则可能出现空指针异常。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060790.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060790.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-adb-shell%E4%B8%AD%E6%8F%90%E7%A4%BApermission-denied-date-2017-06-15" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: adb shell中提示Permission denied<br />
date: 2017-06-15</h2>
<p>在Android开发中，如果需要查看本地数据库，可以在adb shell中查看（当然前提条件是真机root或者使用模拟器），输入下面的命令可以查看：</p>
<pre><code class="language-plain_text">Last login: Thu Jun 15 10:02:21 on ttys000
JackRodeMacBook-Pro:~ jack$ adb shell
generic_x86_64:/ $ cd /data/data/cn.jackro.databasedemo/databases/
/system/bin/sh: cd: /data/data/cn.jackro.databasedemo/databases:     Permission denied
2|generic_x86_64:/ $ 
</code></pre>
<p>但是当执行cd命令切换到应用的数据库目录时，却提示Permission denied（权限拒绝），经查，可以执行su命令切换到超级用户来提高权限，访问该文件。命令如下所示：</p>
<pre><code class="language-plain_text">Last login: Thu Jun 15 10:09:58 on ttys000
JackRodeMacBook-Pro:~ jack$ adb shell
generic_x86_64:/ $ cd /data/data/cn.jackro.databasedemo/databases
/system/bin/sh: cd: /data/data/cn.jackro.databasedemo/databases: Permission denied
2|generic_x86_64:/ $ su
generic_x86_64:/ # cd /data/data/cn.jackro.databasedemo/databases
generic_x86_64:/data/data/cn.jackro.databasedemo/databases # ls
BookStore.db BookStore.db-journal 
generic_x86_64:/data/data/cn.jackro.databasedemo/databases #
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060889.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060889.html</id>
    <content type="html"><![CDATA[
<h2><a id="title%E8%A7%A3%E5%86%B3-camera-is-being-used-after-camera-release-was-called-date-2016-07-01" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: 解决Camera is being used after Camera.release() was called<br />
date: 2016-07-01</h2>
<pre><code class="language-plain_text">java.lang.RuntimeException: Camera is being used after Camera.release() was called
</code></pre>
<p>在相机开发中，打开相机后点返回，偶尔会出现如上所示的异常，解决代码如下：</p>
<pre><code class="language-plain_text">@BindView(R.id.sv_preview)
SurfaceView mSvPreview;

private BaseCameraManager cameraManager;

@Override
protected void onResume() {
    super.onResume();

    int hasCameraPermission = ContextCompat.checkSelfPermission(mActivity, Manifest.permission.CAMERA);
    if (hasCameraPermission != PackageManager.PERMISSION_GRANTED) {
        ActivityCompat.requestPermissions(mActivity, new String[]{Manifest.permission.CAMERA},
                MY_PERMISSIONS_REQUEST_CAMERA);
    }

    //region 这里调用初始化照相机并设置SurfaceHolder的回调以解决按下home键或者按下最近应用菜单键再返回扫码界面时相机不显示的问题

    cameraManager = new CameraManager(getApplication());

    setSurfaceViewVisible(true);

    cameraManager.setOnResultListener(this);

    mSvPreview.getHolder().addCallback(this);
    //endregion
}

@Override
public void surfaceDestroyed(SurfaceHolder holder) {        

    setEmptyViewVisible(true);    
    //解决java.lang.RuntimeException: Camera is being used after Camera.release() was called异常    
    holder.removeCallback(this);    

    cameraManager.releaseCamera();
}
</code></pre>
<p>BaseCameraManager源码如下：</p>
<pre><code class="language-plain_text">/**
 * CameraManager的基类
 * Created by Jack on 2016/7/1 12:55
 * Email: zhuochangjing@foxmail.com
 */
public abstract class BaseCameraManager {
    private Point qrBoxSize;

    boolean hook = false;
    int rotate;
    int count = 0;
    boolean isRelease = true;
    ExecutorService executor;
    int displayOrientation;
    private MultiFormatReader reader;
    OnResultListener onResultListener;
    protected Context context;

    BaseCameraManager(Context context) {
        this.context = context;
        executor = Executors.newSingleThreadExecutor();
        reader = new MultiFormatReader();
        qrBoxSize = new Point();
        qrBoxSize.x = (int) context.getResources().getDimension(R.dimen.width_qr_box_view);
        qrBoxSize.y = (int) context.getResources().getDimension(R.dimen.height_qr_box_view);
    }

    QRResult getCodeValue(byte[] data, Point previewSize) {
        Bitmap bitmap = null;
        ByteArrayOutputStream stream = new ByteArrayOutputStream(data.length);
        YuvImage image = new YuvImage(data, ImageFormat.NV21, previewSize.x, previewSize.y, null);
        int left = previewSize.x - qrBoxSize.x &gt;&gt; 1;
        int right = previewSize.x + qrBoxSize.x &gt;&gt; 1;
        int top = previewSize.y - qrBoxSize.y &gt;&gt; 1;
        int bottom = previewSize.y + qrBoxSize.y &gt;&gt; 1;
        Rect rect = new Rect(left, top, right, bottom);
        if (image.compressToJpeg(rect, 100, stream)) {
            byte[] bytes = stream.toByteArray();
            bitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
        }
        try {
            stream.close();
        } catch (IOException e) {
            Log.e(&quot;onPreviewFrame&quot;, e.toString());
        }

        if (displayOrientation &gt; 0) {
            Matrix matrix = new Matrix();
            matrix.postRotate(displayOrientation);
            assert bitmap != null;
            Bitmap newBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, false);
            bitmap.recycle();
            bitmap = newBitmap;
        }

        assert bitmap != null;
        int width = bitmap.getWidth();
        int height = bitmap.getHeight();
        int[] pixels = new int[width * height];
        bitmap.getPixels(pixels, 0, width, 0, 0, width, height);
        Result result = QRUtils.decode(new RGBLuminanceSource(width, height, pixels), reader);
        if (result != null) {
            return new QRResult(bitmap, result);
        } else {
            bitmap.recycle();
            return null;
        }
    }

    public void setHook(boolean hook) {
        this.hook = hook;
    }

    public void setOnResultListener(OnResultListener onResultListener) {
        this.onResultListener = onResultListener;
    }

    public void shutdownExecutor() {
        executor.shutdown();
    }

    public ExecutorService getExecutor() {
        return executor;
    }

    public void setRotate(int rotate) {
        this.rotate = rotate;
    }

    public abstract void connectCamera(SurfaceHolder surfaceHolder);

    public abstract void setCameraParameter();

    public abstract void startCapture();

    public abstract void releaseCamera();

    public interface OnResultListener {
        void onResult(QRResult qrResult);
    }
}
</code></pre>
<p>CameraManager源码如下：</p>
<pre><code class="language-plain_text">/**
 * This class is for android targets below android 5.0 and it uses old camera api
 * Created by Jack on 2016/7/1 12:55
 * Email: zhuochangjing@foxmail.com
 */
@SuppressWarnings(&quot;deprecation&quot;)
public class CameraManager extends BaseCameraManager implements Camera.AutoFocusCallback, Camera.PreviewCallback {

    private Camera camera;

    public CameraManager(Context context) {
        super(context);
    }

    @Override
    public void onAutoFocus(boolean success, Camera camera) {
        if (hook || isRelease) return;
        camera.setOneShotPreviewCallback(this);
    }

    @Override
    public void connectCamera(SurfaceHolder surfaceHolder) {
        if (!isRelease) return;
        try {
            camera = Camera.open();
            isRelease = false;
            camera.setPreviewDisplay(surfaceHolder);
            setCameraParameter();
            camera.startPreview();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    @Override
    public void releaseCamera() {
        if (isRelease) return;
        isRelease = true;
        camera.setPreviewCallback(null);
        camera.cancelAutoFocus();
        camera.stopPreview();
        try {
            camera.setPreviewDisplay(null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        camera.release();
        camera = null;
    }

    @Override
    public void startCapture() {
        if (hook || isRelease || executor.isShutdown()) return;
        executor.execute(new Runnable() {
            @Override
            public void run() {
                camera.autoFocus(CameraManager.this);
            }
        });
    }

    @Override
    public void setCameraParameter() {
        Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
        Camera.getCameraInfo(0, cameraInfo);
        int degrees = 0;
        switch (rotate) {
            case Surface.ROTATION_0: {
                degrees = 0;
                break;
            }
            case Surface.ROTATION_90: {
                degrees = 90;
                break;
            }
            case Surface.ROTATION_180: {
                degrees = 180;
                break;
            }
            case Surface.ROTATION_270: {
                degrees = 270;
                break;
            }
        }

        if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
            displayOrientation = (cameraInfo.orientation + degrees) % 360;
            displayOrientation = (360 - displayOrientation) % 360;
        } else {
            displayOrientation = (cameraInfo.orientation - degrees + 360) % 360;
        }

        /** Warning : may throw exception with parameters not supported */
        Camera.Parameters parameters = camera.getParameters();
        List&lt;Camera.Size&gt; previewSizes = parameters.getSupportedPreviewSizes();
        Camera.Size bestSize = previewSizes.get(0);
        for (int i = 1; i &lt; previewSizes.size(); i++) {
            if (previewSizes.get(i).width * previewSizes.get(i).height &gt; bestSize.width * bestSize.height) {
                bestSize = previewSizes.get(i);
            }
        }
        parameters.setPreviewSize(bestSize.width, bestSize.height);

        List&lt;Camera.Size&gt; pictureSizes = parameters.getSupportedPictureSizes();
        bestSize = pictureSizes.get(0);
        for (int i = 1; i &lt; pictureSizes.size(); i++) {
            if (pictureSizes.get(i).width * pictureSizes.get(i).height &gt; bestSize.width * bestSize.height) {
                bestSize = pictureSizes.get(i);
            }
        }
        parameters.setPictureSize(bestSize.width, bestSize.height);
        camera.setParameters(parameters);
        camera.setDisplayOrientation(displayOrientation);
    }

    @Override
    public void onPreviewFrame(final byte[] data, final Camera camera) {
        if (hook || executor.isShutdown()) return;
        Observable
                .just(camera.getParameters().getPreviewSize())
                .subscribeOn(Schedulers.from(executor))
                .map(new Func1&lt;Camera.Size, QRResult&gt;() {
                    @Override
                    public QRResult call(Camera.Size size) {
                        return getCodeValue(data, new Point(size.width, size.height));
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;QRResult&gt;() {
                    @Override
                    public void call(QRResult qrResult) {
                        if (qrResult == null) {
                            count++;
                            startCapture();
                            return;
                        }
                        QRUtils.vibrate(context);
                        if (onResultListener != null) {
                            onResultListener.onResult(qrResult);
                        }
                        count = 0;
                    }
                }, new Action1&lt;Throwable&gt;() {
                    @Override
                    public void call(Throwable throwable) {
                        Log.e(&quot;CameraManager&quot;, &quot;getCodeValue() failed .&quot;);
                    }
                });
    }
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553060993.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553060993.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-safari%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AEjava%E6%94%AF%E6%8C%81-date-2017-09-21" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Safari浏览器设置Java支持<br />
date: 2017-09-21</h2>
<p>今天碰到一个公司的项目连接服务器的页面在浏览器中打开需要安装JDK并打开浏览器Java支持的问题。经过一番搜索发现，Java官网的帮助中心中介绍推荐使用IE（windows）和Safari（Mac os）（参见链接：<a href="https://www.java.com/zh_CN/download/faq/chrome.xml">https://www.java.com/zh_CN/download/faq/chrome.xml</a>），由于自己家里电脑是Mac os（Mac OS 10.12.6），所以使用Safari（自己电脑当前版本是11.0）来打开浏览器Java支持。</p>
<p>在Safari中如何打开浏览器Java支持呢？经过一番搜索，发现可以在Safari的偏好设置中的网站选项去打开Java支持，针对某个网站去打开即可，如下图所示：</p>
<p><img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2017092101.jpg" alt="jackro_blog2017092101" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061097.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061097.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-sqlite%E6%B8%85%E7%A9%BA%E8%A1%A8%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%B0%86%E8%87%AA%E5%A2%9E%E9%87%8F%E5%BD%92%E9%9B%B6-date-2017-06-16" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: SQLite清空表数据并将自增量归零<br />
date: 2017-06-16</h2>
<p>在普通的SQL中，实现如题所示的需求是通过truncate [tablename]来实现，但是在SQLite中，是没有truncate关键字的，所以SQLite不支持该语句。但是SQLite可以通过如下方式来实现：</p>
<p>1）先清空表数据：</p>
<pre><code class="language-plain_text">    delete from [tablename];
</code></pre>
<p>2）当数据库中包含自增列时，会自动建立一个名为 sqlite_sequence 的表。这个表包含两个列：name和seq。name记录自增列所在的表（即tablename），seq记录当前序号（下一条记录的编号就是当前序号加1）。你可以通过如下方式将自增量归零：</p>
<pre><code class="language-plain_text">    //1. 将表名为tablename的自增量置0
    update sqlite_sequence set seq = 0 where name = 'tablename'
    //2. 将表名为tablename的记录删除
    delete from sqlite_sequence where name = 'tablename'
    //3. 将sqlite_sequence表清空数据
    delete from sqlite_sequence
</code></pre>
<p>虽然在普通的DBMS中，用delete不如用truncate快，但是SQLite对delete做了优化，这个优化也可以使它运行的很快。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061200.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061200.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-streamreader%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E6%97%B6%E5%87%BA%E7%8E%B0%E4%B9%B1%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-date-2014-08-12" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: StreamReader读取文件时出现乱码的解决方案<br />
date: 2014-08-12</h2>
<p>今天在做一个打开文件对话框OpenFileDialog时，需要对打开的文件进行读取，显示在在窗体中的RichTextBox中。但是在显示文件时，却发现显示的中文字符串出现乱码。代码的关键部分如下所示：</p>
<pre><code class="language-plain_text">	1 StreamReader sr = new StreamReader(openFileDialog.OpenFile());      
	2 string str = sr.ReadToEnd();
	3 childForm.richTextBox1.Text = str;  
</code></pre>
<p>开始我也想到了是字符编码出了问题，于是我在初始化StreamReader时，给它加了字符编码参数，加了好几次，Encoding.Unicode，Encoding.UTF32，Encoding.UTF7，Encoding.UTF8，Encoding.ASCII，这些能加的编码方案我都试过了，结果都不行，还是会乱码。百般无奈之下，我只好在.net爱好者群里问了。然后群里就有好心人给我发了一个链接，点进去看了之后恍然大悟。链接如下所示：<a href="http://www.cnblogs.com/wmw1989/archive/2008/05/19/1202500.html" title="http://www.cnblogs.com/wmw1989/archive/2008/05/19/1202500.html">http://www.cnblogs.com/wmw1989/archive/2008/05/19/1202500.html</a></p>
<p>原来，中文编码是GB2312，而当前系统的代码页的编码方案采用的是ANSI编码，出现乱码也就不足为奇了。解决方案很简单，就是初始化StreamReader的时候告诉它目前代码页的编码方案。可是由于Encoding类并没有定义ANSI编码方案，所以只能采用Default让系统获取当前操作系统的当前ANSI代码页的编码方案。因此上面的代码换成如下的代码就解决了：</p>
<pre><code class="language-plain_text">	1 StreamReader sr = new StreamReader(openFileDialog.OpenFile(), Encoding.Default);                
	2 string str = sr.ReadToEnd();
	3 childForm.richTextBox1.Text = str;  
</code></pre>
<p> </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061305.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061305.html</id>
    <content type="html"><![CDATA[
<h2><a id="title%E4%BD%BF%E7%94%A8-scp%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0linux%E6%9C%8D%E5%8A%A1%E5%99%A8-date-2017-06-23" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: 使用scp上传文件到Linux服务器<br />
date: 2017-06-23</h2>
<p>我的服务器是阿里云的ubuntu 16.04，电脑是Mac os。上传文件到Linux服务器可以在终端中采用如下命令上传：</p>
<pre><code class="language-plain_text">//filename是你要上传的文件名，username是服务器主机用户名，x.x.x.x是服务器IP地址，directory是要将文件上传到服务器的directory目录下
scp [filename] [username]@x.x.x.x:[dirctory]
</code></pre>
<p>命令scp基于ssh协议，可以将文件拷贝到远程服务器上的指定目录，Mac os自带，使用很方便。当然还可以使用ftp/sftp方式上传。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061410.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061410.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-viewpager%E4%B8%AD%E7%9A%84fragment%E6%9C%89%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BEmapview%E5%88%87%E6%8D%A2%E5%8D%A1%E9%A1%BF%E9%97%AA%E5%B1%8F-date-2016-06-15" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: ViewPager中的Fragment有百度地图MapView切换卡顿闪屏<br />
date: 2016-06-15</h2>
<p>当Fragment和ViewPager一起使用时，某个Fragment中含有百度地图MapView时，当你从其他Fragment切换到含有百度地图MapView的Fragment时，会有卡顿闪屏的效果。解决方法是把百度地图的MapView替换成TextureMapView，卡顿闪屏问题完美解决。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061515.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061515.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-windows-10%E4%B8%8B%E8%AE%A9jar%E6%96%87%E4%BB%B6%E5%8F%8C%E5%87%BB%E5%8F%AF%E4%BB%A5%E8%BF%90%E8%A1%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-date-2015-10-28" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: windows 10下让jar文件双击可以运行的解决方法<br />
date: 2015-10-28</h2>
<p>　　windows xp下让jar文件双击可以运行的解决办法很简单，只要打开我的电脑在工具的文件夹选项中找到文件类型，配置注册一下jar文件的open操作就可以了，这个过程是界面操作，非常的简单易接受。但是到了windows 10，笔者愚笨，找不到文件夹选项的文件类型，无法通过界面操作，因此，只能想办法通过注册表来注册jar文件的open操作类型，如果你知道windows xp下的操作，这个注册表过程的操作其实不难理解的。</p>
<p>　　操作步骤如下：</p>
<p>　　1.打开注册表；</p>
<p>　　2.找到HKEY_CLASSES_ROOT/Applications /javaw.exe，一开始没有找到javaw.exe的话，就在jre或者jdk文件中找到javaw.exe（如我的电脑中为D:\Java\jre1.8.0_60\bin\javaw.exe），运行一下，或者找一个jar文件，选择打开方式，找到javaw.exe，打开一下</p>
<p>　　3.进入HKEY_CLASSES_ROOT/Applications/javaw.exe/shell/open/command，修改默认的键值为&quot;D:\Java\jre1.8.0_60\bin\javaw.exe&quot; -jar &quot;%1&quot;<br />
java环境安装在其他地方也类似，修改一下路径就可以了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061623.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061623.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-winform%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8Fimage-oom%E5%BC%82%E5%B8%B8%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95-date-2014-08-18" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Winform应用程序Image OOM异常的处理方法<br />
date: 2014-08-18</h2>
<p>在做Winform应用程序处理Image时碰到了这样一个问题。窗体设计如下：</p>
<p><img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2014081801.jpg" alt="jackro_blog2014081801" /></p>
<p>当点击上面窗体中的上一张和下一张时，PictureBox中的图片会跟着切换，但是切换时却抛出了如下图所示的异常：</p>
<p><img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2014081802.jpg" alt="jackro_blog2014081802" /></p>
<p>内存不足！！！<br />
我一开始的关键代码如下所示：</p>
<pre><code class="language-plain_text">	private void Form1_Load(object sender, EventArgs e)
        {
            pictureBox1.Image = Image.FromFile(@&quot;f:\图片\1.jpg&quot;);
        }

        string[] path = Directory.GetFiles(@&quot;f:\图片&quot;);
        
        int i = 0;

        private void button2_Click(object sender, EventArgs e)
        {
            i++;
            if (i == path.Length)
            {
                i = 0;
            }
            pictureBox1.Image = Image.FromFile(path[i]);
        }

        private void button1_Click(object sender, EventArgs e)
        {
            i--;
            if (i &lt; 0)
            {
                i = path.Length - 1;
            }
            pictureBox1.Image = Image.FromFile(path[i]);
        }
</code></pre>
<p>后来，我在博客园里找问题的答案，找到了如下几种解决办法：</p>
<p><strong>&lt;1&gt;释放内存</strong></p>
<p>每次在PictureBox中显示完图像时，将其释放掉。释放内存关键代码如下：</p>
<pre><code class="language-plain_text">	//if (pictureBox1.Image != null)//
	{//    pictureBox1.Image.Dispose();//}
	//或者像下面这样回收所有资源// GC.Collect();
</code></pre>
<p><strong>&lt;2&gt;双缓冲(类似于GDI+中的双倍缓冲)</strong><br />
就是创建一个缓冲的“内存库”来存储图像，关键代码如下：</p>
<pre><code class="language-plain_text">	//Bitmap bmp = new Bitmap(path[i]);  //bmp即相当于一个缓冲的“内存库”
	//pictureBox1.Image = (Image)bmp;
</code></pre>
<p><strong>&lt;3&gt;自己琢磨出来的解决方法</strong><br />
这种方法也可以释放内存，释放内存通过bmp和Image的Dispose()方法实现。<br />
上面两种方法我都试了，可是都还是会抛出异常。后来我经过多次的调试，找到了一种解决问题的办法，这种办法我觉得很奇怪，有点匪夷所思。我先把解决问题的代码展示出来供诸君参考吧，希望看到的大猿能帮我解释下其中的道理。<br />
我只改了我自己写的代码中的“遍历”的范围，修改的关键部分如下所示：</p>
<pre><code class="language-plain_text">        private void button2_Click(object sender, EventArgs e)
        {
            i++;
            if (i == path.Length - 1)
            {
                i = 0;
            }
            pictureBox1.Image = Image.FromFile(path[i]);
        }

        private void button1_Click(object sender, EventArgs e)
        {
            i--;
            if (i &lt; 0)
            {
                i = path.Length - 2;
            }
            pictureBox1.Image = Image.FromFile(path[i]);
            GC.Collect();
        }
</code></pre>
<p>这种方法既没有释放内存，也没有做缓冲的“内存库”存图像，可是程序却跑的很正常，实在让人费解其中的道理。希望看到的大猿能给我解释下这其中的道理，感激不尽！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061730.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061730.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-winform%E7%AA%97%E4%BD%93%E4%BC%A0%E5%80%BC%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93-date-2014-08-13" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Winform窗体传值方法总结<br />
date: 2014-08-13</h2>
<p>窗体传值是在学习窗体应用程序时碰到的一类比较常见的问题，现将窗体传值方法做了一点总结，方法如下：</p>
<p><strong>&lt;1&gt;声明全局变量传值：</strong></p>
<p>在Form1中声明全局变量，如下所示：</p>
<pre><code class="language-plain_text">	public static string str = &quot;窗体1的值&quot;;
</code></pre>
<p>通过Form1的button1_Click事件即可将此全局变量传递给Form2，Form1的全局变量str在Form2中可以直接访问，代码如下所示：</p>
<pre><code class="language-plain_text">	private void button1_Click(object sender, EventArgs e)
	{            
	      Form2 frm2 = new Form2();
	      frm2.Show();
	}
    private void Form2_Load(object sender, EventArgs e)
	{   
	      this.label1.Text = Form1.str;               
	}
</code></pre>
<p><strong>&lt;2&gt;通过构造函数传值：</strong></p>
<p>重载Form2的构造函数，使其能够接受一个来自Form1的参数，重载代码如下所示：</p>
<pre><code class="language-plain_text">    private string str;
    public Form2(string s)
    {
        InitializeComponent();
        this.str = s;        
    }
</code></pre>
<p>上面代码中定义的string变量str用来存储从Form1传递进来的参数。<br />
在Form1的button1_Click事件中实例化Form2并给其传递Form1的一个参数，代码如下所示：</p>
<pre><code class="language-plain_text">    private void button1_Click(object sender, EventArgs e)
    {
        string s = this.textBox1.Text;
        Form2 frm2 = new Form2(s);
        frm2.Show();
    }
</code></pre>
<p>在Form2的Form2_Load中即可接受这个参数，接受这个参数值的代码如下所示：</p>
<pre><code class="language-plain_text">    private void Form2_Load(object sender, EventArgs e)
    {
        this.label1.Text = str;                   
    }
</code></pre>
<p>这样，在单击Form1的button1之后，Form2便会蹦出来，Form2的label1便会显示这个从Form1传进来的值。</p>
<p><strong>&lt;3&gt;在窗体中声明公共属性进行传值：</strong></p>
<p>在Form2中声明公共属性，代码如下所示：<br />
private string username;</p>
<pre><code class="language-plain_text">    public string Username
    {
        get { return username; }
        set { username = value; }
    }
    private string password;

    public string Password
    {
        get { return password; }
        set { password = value; }
    }
</code></pre>
<p>这样，在Form1中即可访问这些属性，也就可以将Form2中这些公共属性的值传递给Form1了，并且也可以从Form1中向Form2的这些公共属性传值。代码如下所示：</p>
<p>（1）Form1向Form2传值：</p>
<pre><code class="language-plain_text">    private void button1_Click(object sender, EventArgs e)
    {
        Form2 frm2 = new Form2();
        frm2.Username = &quot;Jack&quot;;  //Form1向Form2传值
        frm2.Password = &quot;J1234&quot;;
　　　　frm2.Show(); 
    }
    private void Form2_Load(object sender, EventArgs e)
    {
        textBox1.Text = username;
        textBox2.Text = password;
    }
</code></pre>
<p>（2）Form2向Form1传值：</p>
<pre><code class="language-plain_text">    private void textBox1_TextChanged(object sender, EventArgs e)
    {
        this.Username = textBox1.Text;
    }

    private void textBox2_TextChanged(object sender, EventArgs e)
    {
        this.Password = textBox1.Text;
    }
    private void button1_Click(object sender, EventArgs e)
    {
        Form2 frm2 = new Form2();
        frm2.Username = &quot;Jack&quot;;  //Form1向Form2传值
        frm2.Password = &quot;J1234&quot;;            
        comboBox1.Items.Add(frm2.Username);  //Form2向Form1传值
        comboBox1.Items.Add(frm2.Password);
        frm2.Show();
    }   
</code></pre>
<p>声明公共属性传值比较灵活，受限较少，因此比较好用。但是或许这会影响数据的安全性哦。</p>
<p><strong>&lt;4&gt;传递整个窗体进行传值。</strong></p>
<p>类似于构造函数传值，将窗体作为构造函数的参数即可传递整个窗体了。代码如下所示：</p>
<pre><code class="language-plain_text">    private void button1_Click(object sender, EventArgs e)
    {
        Form2 f2 = new Form2(this);
        f2.Show();
    }   
    Form1 frm1;
    public Form2(Form1 f1)
    {
        InitializeComponent();
        this.frm1 = f1;            
    }

    private void Form2_Load(object sender, EventArgs e)
    {
        this.textBox1.Text = frm1.ActiveControl.ToString();
    }
</code></pre>
<p>这样能把Form1整个窗体传递给Form2，在Form2里即可操作Form1的数据及其控件了。</p>
<p><strong>&lt;5&gt;更改系统文件：</strong></p>
<p>更改Form1.Designer.cs，譬如要使其控件变为公共可访问的，即找到在此文件中声明的控件，将你需要在Form2里访问的控件的访问修饰符修改为public，如下所示：</p>
<pre><code class="language-plain_text">    private System.Windows.Forms.Button button1;
    private System.Windows.Forms.ComboBox comboBox1;
</code></pre>
<p>将上面的代码里需要更改的控件的访问修饰符更改后保存即可。这种方法我个人感觉不好，有违C#语言的封装性和数据的安全性，个人建议不提倡使用。</p>
<p><strong>&lt;6&gt;利用委托进行窗体传值：</strong></p>
<p>这种方法是我在网上看到的，对原代码做了一点点改进，利用定义委托和事件以及构造函数的方法，实现了Form1和Form2互相传值。废话不多说，请看代码：<br />
Form1部分的代码：</p>
<pre><code class="language-plain_text">public partial class Form1 : Form
{        
     public Form1()
     {
         InitializeComponent();
     }

     private void button1_Click(object sender, EventArgs e)
     {
         string str = textBox1.Text;
         Form2 f2 = new Form2(str);
         f2.Translate += new TranslateEventHandler(f2_Translate);            
         f2.ShowDialog();
     }

     void f2_Translate(string value)
     {
         textBox1.Text = value;
         //throw new NotImplementedException();
     }               
}
</code></pre>
<p>Form2部分的代码：</p>
<pre><code class="language-plain_text"> public delegate void TranslateEventHandler(string value);
 public partial class Form2 : Form
 {
     string str;
     public Form2(string s)
     {
         InitializeComponent();
         this.str = s;
     }
 
     public event TranslateEventHandler Translate;
     
     private void button1_Click(object sender, EventArgs e)
     {
         Translate(textBox1.Text);
         this.Close();
     }
 
     private void Form2_Load(object sender, EventArgs e)
     {
         this.textBox1.Text = str;
     }            
 }
</code></pre>
<p>Form设计如下图所示：</p>
<p><img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2014081301.jpg" alt="jackro_blog2014081301" /> <br />
      <br />
<img src="https://jackro-blog-1257460298.cos.ap-shanghai.myqcloud.com/jackro_blog2014081302.jpg" alt="jackro_blog2014081302" /><br />
 </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553061843.html"/>
    <updated>2022-04-11T13:35:06+08:00</updated>
    <id>https://jackro.cn/16496553061843.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-xmlreader%E5%9C%A8%E6%9C%AA%E7%9F%A5%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8D%E7%A7%B0%E5%92%8C%E5%B1%9E%E6%80%A7%E7%9A%84%E5%90%8D%E7%A7%B0%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E8%AF%BB%E5%8F%96%E5%B1%9E%E6%80%A7-date-2014-08-10" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: XmlReader在未知元素的名称和属性的名称的情况下读取属性<br />
date: 2014-08-10</h2>
<p>经过努力，终于解决了XmlReader在未知元素的名称和属性的名称的情况下读取属性的方法。在没有解决前，我的代码如下：</p>
<pre><code class="language-plain_text">	using System; 
	using System.Collections.Generic; 
	using System.Linq; 
	using System.Text; 
	using System.Xml; 
	
	namespace ReadAttribute 
	{ 
	    class Program
	     {
	         static void Main(string[] args)
	         {
	             string path = @&quot;e:\testfile\myMail.xml&quot;;
	             
	             #region 读取属性的第一种方法
	             //string date;
	             //try
	             //{
	             //    XmlReader xr = XmlReader.Create(path);
	             //    xr.ReadToFollowing(&quot;mail&quot;);
	             //    date = xr.GetAttribute(&quot;date&quot;);
	             //    Console.Write(&quot;信件的日期为：&quot;);
	             //    Console.WriteLine(date);
	             //}
	             //catch (Exception ex)
	             //{
	             //    Console.WriteLine(ex.Message);
	             //} 
	             #endregion
	 
	             #region 读取属性的第二种方法
	             try
	             {
	                 XmlReader xr = XmlReader.Create(path);
	                 while (xr.Read())
	                 {
	                     if (xr.HasAttributes)
	                     {
	                         //Console.WriteLine(&quot;&lt;&quot; + xr.Name + &quot;&gt;的属性：&quot;);
	                         //for (int i = 0; i &lt; xr.AttributeCount; i++)
	                         //{                            
	                         //xr.MoveToAttribute(i);                            
	                         Console.WriteLine(&quot;&lt;&quot; + xr.Name + &quot;&gt;的属性：&quot;);
	                         Console.WriteLine(&quot;{0}={1}&quot;, xr.Name, xr.Value);
	                         //}                                                                  
	                     }
	                 }
	             }
	             catch (Exception ex)
	             {
	                 Console.WriteLine(ex.Message);
	             } 
	             #endregion
	             Console.ReadKey();
	         }
	     }
	 }
</code></pre>
<p>解决后，我的代码如下：</p>
<pre><code class="language-plain_text">	using System; 
	using System.Collections.Generic; 
	using System.Linq; 
	using System.Text; 
	using System.Xml; 
	
 	namespace ReadAttribute 
	{ 
	    class Program
	     {
	         static void Main(string[] args)
	         {
	             string path = @&quot;e:\testfile\myMail.xml&quot;;
	             
	             #region 读取属性的第一种方法
	             //string date;
	             //try
	             //{
	             //    XmlReader xr = XmlReader.Create(path);
	             //    xr.ReadToFollowing(&quot;mail&quot;);
	             //    date = xr.GetAttribute(&quot;date&quot;);
	             //    Console.Write(&quot;信件的日期为：&quot;);
	             //    Console.WriteLine(date);
	             //}
	             //catch (Exception ex)
	             //{
	             //    Console.WriteLine(ex.Message);
	             //} 
	             #endregion
	 
	             #region 读取属性的第二种方法
	             try
	             {
	                 XmlReader xr = XmlReader.Create(path);
	                 while (xr.Read())
	                 {
	                     if (xr.HasAttributes)
	                     {
	                         Console.WriteLine(&quot;&lt;&quot; + xr.Name + &quot;&gt;的属性：&quot;);
	                         for (int i = 0; i &lt; xr.AttributeCount; i++)
	                         {                            
	                         xr.MoveToAttribute(i);                              
	                         
	                         //Console.WriteLine(&quot;&lt;&quot; + xr.Name + &quot;&gt;的属性：&quot;);
	                         Console.WriteLine(&quot;{0}={1}&quot;, xr.Name, xr.Value);
	                         }                                                                     								}
	                }
	             }
	             catch (Exception ex)
	             {
	                 Console.WriteLine(ex.Message);
	             } 
	             #endregion
	             Console.ReadKey();
	         }
	     }
	 }
</code></pre>
<p>解决后，上面的代码可以不用知道元素的名称和属性的名称的情况下读取XML文件中的所有属性名及其值。这种方法有点像迭代器遍历数组，只不过这里的元素变成了XML的节点和元素，而且这里可以把XML的属性也可以看成是XML的节点（”可以看成XML元素的子节点“），这样元素看成是节点，属性也看成是节点，都当做节点处理，也就是说这个遍历可以看成是遍历XML的节点。这样也就可以解释上面代码中的 xr.Name、xr.Value了，他们分别可以看成是XML的节点名和节点值（即属性名和属性值）。如此，这样的方法便不难理解了！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553058156.html"/>
    <updated>2022-04-11T13:35:05+08:00</updated>
    <id>https://jackro.cn/16496553058156.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-android-7-0%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B9%8B%E5%90%8E%E5%8F%B0%E4%BC%98%E5%8C%96-date-2017-06-13" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Android 7.0行为变更之后台优化<br />
date: 2017-06-13</h2>
<p>Android 7.0 对系统和API做了一些变更。其中关于隐式广播的移除见官方文档链接：<a href="https://developer.android.com/about/versions/nougat/android-7.0-changes.html#bg-opt">Project Svelte：后台优化</a>，根据官方文档介绍，该变更主要是为了帮助优化内存使用和电量消耗，因为隐式广播会在后台频繁启动已注册侦听这些广播的应用，删除这些广播可以显著提升设备性能和用户体验。</p>
<p>针对这一变更，官方文档也给出了应用开发者如何改写应用的一些建议，官方文档参考：<a href="https://developer.android.com/preview/features/background-optimization.html">后台优化</a>。</p>
<p>1）<a href="https://developer.android.com/reference/android/net/ConnectivityManager.html#CONNECTIVITY_ACTION">CONNECTIVITY_ACTION</a></p>
<p>面向Android 7.0(API 24)及以上的应用如果在应用的AndroidManifest静态注册<a href="https://developer.android.com/reference/android/net/ConnectivityManager.html#CONNECTIVITY_ACTION">CONNECTIVITY_ACTION</a>，将不会收到该广播。但是我们可以使用[Context.registerReceiver()](<a href="https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver">https://developer.android.com/reference/android/content/Context.html#registerReceiver(android.content.BroadcastReceiver</a>, android.content.IntentFilter))动态注册<a href="https://developer.android.com/reference/android/net/ConnectivityManager.html#CONNECTIVITY_ACTION">CONNECTIVITY_ACTION</a>，这将会让我们的应用在运行时收到该广播（这样也可以改善内存使用和电量消耗）。</p>
<p>Android 7.0(API 24)还为我们提供了<a href="https://developer.android.com/reference/android/app/job/JobScheduler.html">JobScheduler</a>和<a href="https://developer.android.com/reference/android/app/job/JobService.html#onStartJob(android.app.job.JobParameters)">onStartJob()</a>（<a href="https://developer.android.com/reference/android/app/job/JobService.html">JobService</a>的回调方法），我们可以使用<a href="https://developer.android.com/reference/android/app/job/JobInfo.Builder.html">JobInfo.Builder</a>构建一个在Unmetered Network Connection上的<a href="https://developer.android.com/reference/android/app/job/JobInfo.html">JobInfo</a>对象，然后使用<a href="https://developer.android.com/reference/android/app/job/JobScheduler.html">JobScheduler</a>执行这个<a href="https://developer.android.com/reference/android/app/job/JobInfo.html">JobInfo</a>对象，接下来就可以在<a href="https://developer.android.com/reference/android/app/job/JobService.html#onStartJob(android.app.job.JobParameters)">onStartJob()</a>方法里执行我们自己的逻辑。</p>
<p>我们还可以使用<a href="https://developer.android.com/reference/android/net/ConnectivityManager.NetworkCallback.html">ConnectivityManager.NetworkCallback</a>来监听网络变化，比如该接口中的<a href="https://developer.android.com/reference/android/net/ConnectivityManager.NetworkCallback.html#onAvailable(android.net.Network)">onAvailable()</a>方法。</p>
<p>2）<a href="https://developer.android.com/reference/android/hardware/Camera.html#ACTION_NEW_PICTURE">ACTION_NEW_PICTURE</a>或<a href="https://developer.android.com/reference/android/hardware/Camera.html#ACTION_NEW_VIDEO">ACTION_NEW_VIDEO</a></p>
<p>在Android 7.0(API 24)里，这两个隐式广播被移除了，应用程序不能发送或接受这两个广播来监听系统的照片或者视频的拍摄。但是在Android 8.0(API 26)，这两个广播又被添加回来了，不过也仅仅可以通过动态注册来接收，并且仅仅适用于监听到他们来执行简单的可以立即被执行的任务，执行复杂的繁重的任务仍然需要使用<a href="https://developer.android.com/reference/android/app/job/JobScheduler.html">JobScheduler</a>、<a href="https://developer.android.com/reference/android/app/job/JobInfo.html">JobInfo</a>和<a href="https://developer.android.com/reference/android/app/job/JobService.html#onStartJob(android.app.job.JobParameters)">onStartJob()</a>，和上面第一点处理方法类似，不同的是，需要调用<a href="https://developer.android.com/reference/android/app/job/JobInfo.Builder.html#addTriggerContentUri(android.app.job.JobInfo.TriggerContentUri)">JobInfo.Builder.addTriggerContentUri()</a>构造<a href="https://developer.android.com/reference/android/app/job/JobInfo.html">JobInfo</a>对象，然后在<a href="https://developer.android.com/reference/android/app/job/JobService.html#onStartJob(android.app.job.JobParameters)">onStartJob()</a>回调方法里去调用<a href="https://developer.android.com/reference/android/app/job/JobParameters.html#getTriggeredContentAuthorities()">JobParameters.getTriggeredContentAuthorities()</a>和<a href="https://developer.android.com/reference/android/app/job/JobParameters.html#getTriggeredContentUris()">JobParameters.getTriggeredContentUris()</a>来获取拍照或摄像时增加的照片或视频的Uri。</p>
<p>像上面这样优化App可以让App在低内存的设备上改善性能和用户体验（这可以改善Android应用生态环境），移除后台服务（background service）和隐式广播的依赖可以帮助你的App在这样的设备上运行的更好。虽然Android 7.0(API 24)在逐步减少这样的issue，但是我们仍然推荐你通过完全不使用这样的后台进程来优化你的App。<br />
Android 7.0(API 24)还引入了新的adb命令来帮助你测试你的App在不使用后台进程时是否还能很好的运行。命令如下：</p>
<pre><code class="language-plain_text">    //模拟隐式广播和后台服务（background service）不可用的条件
    $ adb shell cmd appops set &lt;package_name&gt; RUN_IN_BACKGROUND ignore
    //重新使隐式广播和后台服务（background service）可用
    $ adb shell cmd appops set &lt;package_name&gt; RUN_IN_BACKGROUND allow
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[---]]></title>
    <link href="https://jackro.cn/16496553058247.html"/>
    <updated>2022-04-11T13:35:05+08:00</updated>
    <id>https://jackro.cn/16496553058247.html</id>
    <content type="html"><![CDATA[
<h2><a id="title-android%E4%B8%ADactionbar%E7%9A%84setxxxenabled%E6%96%B9%E6%B3%95%E7%9A%84%E7%90%86%E8%A7%A3-date-2015-06-14" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>title: Android中ActionBar的setXXXEnabled方法的理解<br />
date: 2015-06-14</h2>
<p>setHomeButtonEnabled这个方法在小于4.0版本的默认值是true，但是在4.0及其以上是false，该方法的作用：决定左上角的图标是否可以点击，没有向左的小图标。true则图标可以点击，false则不可以点击。</p>
<pre><code class="language-plain_text">	actionBar.setDisplayHomeAsUpEnabled(true)    // 给左上角图标的左边加上一个返回的图标 。对应ActionBar.DISPLAY_HOME_AS_UP。

	actionBar.setDisplayShowHomeEnabled(true)   //使左上角图标是否显示，如果设成false，则没有程序图标，仅仅就个标题，否则，显示应用程序图标。

	actionBar.setDisplayShowCustomEnabled(true)  // 使自定义的普通View能在title栏显示，即actionBar.setCustomView能起作用，对应ActionBar.DISPLAY_SHOW_CUSTOM。

	actionBar.setDisplayShowTitleEnabled(true)   //对应ActionBar.DISPLAY_SHOW_TITLE。
</code></pre>
<p>其中setHomeButtonEnabled和setDisplayShowHomeEnabled共同起作用，如果setHomeButtonEnabled设成false，即使setDisplayShowHomeEnabled设成true，图标也不能点击。</p>

]]></content>
  </entry>
  
</feed>
